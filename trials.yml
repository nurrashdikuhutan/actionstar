name: Kakapo-PVT

run-name: '
  ${{ github.event.head_commit.message  || github.workflow }}
  ON ${{ github.event_name }}
  -> ${{ github.ref_name }}
'

env:
  # use this env var to identify which workflow is running
  # e.g it can be used by report portal config to customize the launcher name
  WORKFLOW_NAME: KakapoPVT

  #defaults
  gitReference: 'mw_2.6.1'
  mobileVersion: '2.6.1'

  #miscellaneous env vars
  ANNOTATION: "n/a"
  YARN_SCRIPT: "${{ github.event.inputs.select_mobile }}.kakapo.sauce"
  NODE_OPTIONS: "--max-old-space-size=5120"
  SAUCE_USERNAME: ${{secrets.SAUCE_USERNAME}}
  SAUCE_ACCESS_KEY: ${{secrets.SAUCE_ACCESS_KEY}}
  GITHUB_PAT: ${{secrets.GH_TOKEN}}
  NGROK_AUTH_TOKEN: ${{secrets.NGROK_AUTH_TOKEN}}

permissions:
  actions: read
  contents: read
  id-token: write
  checks: write
  statuses: write

on:
  workflow_dispatch:
    inputs:
      git_reference:
        required: true
        description: JJ Git Version (master, mw_2.6.1 or subbranch)
        default: "mw_2.6.1"
      wallet_version:
        required: false
        type: choice
        description: Mattr Wallet App Version
        default: '2.6.1'
        options:
          - 2.6.1
          - 2.5.1
      annotation:
        description: "[OPTIONAL] Test report annotations"
        required: false
  repository_dispatch:
    types: ["KakapoPVT"]

  schedule:
    # PROD: Runs every MON and WED 8am UTC (8pm NZT Winter, 9pm NZT Summer)
    - cron: "00 8 * * 1,3"

jobs:
  pvt-android:
    runs-on: [self-hosted, macos, e2e]
    timeout-minutes: 10

    steps:

      # initialize Test Report Annotations
      # create ANNOTATION env variable. The report config will retrieve this value from process.env.ANNOTATION
      - if: ${{ github.event.inputs.annotation != ''}} # manual workflow annotation
        name: Check if annotation exist - manual dispatch
        run: echo "ANNOTATION=$(echo ${{ github.event.inputs.annotation }})" >> $GITHUB_ENV
      - if: ${{ github.event.client_payload.annotation != ''}} # api trigger annotation
        name: Check if annotation exist - repository_dispatch
        run: echo "ANNOTATION=$(echo ${{ github.event.client_payload.annotation }})" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        name: 'Checkout reference: ${{ env.gitReference }}'
        with:
          clean: "false"
          # fetch-depth may save additional git fetch roundtrip if merge-base is found within latest 10 commits
          fetch-depth: 10
          ref: ${{ env.gitReference }}

      # Setup and Run Mocha test
      - uses: ./.github/actions/run-jj-mocha-test
        env:
          select_mobile: ${{ github.event.inputs.select_mobile }}
          wallet_version: ${{ env.mobileVersion }}
        name: Setup and Run JJ Mocha Test
        with:
          YARN_SCRIPT: "android.kakapo.sauce"
          ENV_KEY: 'prod'
          TENANT: 'e2e-prod'
          NPMJS_TOKEN: ${{ secrets.NPMJS_TOKEN }}
          BRANCH_SLACK_WEBHOOK: ${{ secrets.BRANCHTEST_SLACK_WEBHOOK_URL }}
          MASTER_SLACK_WEBHOOK: ${{ secrets.E2ETEST_SLACK_WEBHOOK_URL }}
          REPORTPORTAL_TOKEN: ${{ secrets.REPORTPORTAL_TOKEN }}

      - name: Test Report
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226 #pin @v1.60
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Test Report - MOBILE # Name of the check run which will be created
          path: reports/wdio-junit/wdio-junit.xml # Path to test results
          reporter: jest-junit # Format of test results

  pvt-ios:
    runs-on: [self-hosted, macos, e2e]
    timeout-minutes: 10

    steps:

      # initialize Test Report Annotations
      # create ANNOTATION env variable. The report config will retrieve this value from process.env.ANNOTATION
      - if: ${{ github.event.inputs.annotation != ''}} # manual workflow annotation
        name: Check if annotation exist - manual_dispatch
        run: echo "ANNOTATION=$(echo ${{ github.event.inputs.annotation }})" >> $GITHUB_ENV
      - if: ${{ github.event.client_payload.annotation != ''}} # api trigger annotation
        name: Check if annotation exist - repository_dispatch
        run: echo "ANNOTATION=$(echo ${{ github.event.client_payload.annotation }})" >> $GITHUB_ENV

      - uses: actions/checkout@v3
        name: 'Checkout ${{ env.gitReference }}'
        with:
          clean: "false"
          # fetch-depth may save additional git fetch roundtrip if merge-base is found within latest 10 commits
          fetch-depth: 10
          ref: ${{ env.gitReference }}

      # Setup and Run Mocha test
      - uses: ./.github/actions/run-jj-mocha-test
        env:
          select_mobile: ${{ github.event.inputs.select_mobile }}
          wallet_version: ${{ env.mobileVersion }}
        name: Setup and Run JJ Mocha Test
        with:
          YARN_SCRIPT: "ios.kakapo.sauce"
          ENV_KEY: 'prod'
          TENANT: 'e2e-prod'
          NPMJS_TOKEN: ${{ secrets.NPMJS_TOKEN }}
          BRANCH_SLACK_WEBHOOK: ${{ secrets.BRANCHTEST_SLACK_WEBHOOK_URL }}
          MASTER_SLACK_WEBHOOK: ${{ secrets.E2ETEST_SLACK_WEBHOOK_URL }}
          REPORTPORTAL_TOKEN: ${{ secrets.REPORTPORTAL_TOKEN }}

      - name: Test Report
        uses: dorny/test-reporter@c9b3d0e2bd2a4e96aaf424dbaa31c46b42318226 #pin @v1.60
        if: success() || failure() # run this step even if previous step failed
        with:
          name: Test Report - MOBILE # Name of the check run which will be created
          path: reports/wdio-junit/wdio-junit.xml # Path to test results
          reporter: jest-junit # Format of test results

