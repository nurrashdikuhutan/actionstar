# This is a basic workflow to help you get started with Actions

name: CI

env:
  ENVIRONMENT: ${{ github.event.client_payload.envKey }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
          envKey:
            description: 'Environment flag'
            required: true
            default: 'dev'
  
  repository_dispatch:
    types: ['api_triggered']

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      #- name: Run a one-line script
        #run: echo Hello, world!
        #if: ${{ github.event.client_payload.param1 }} != ''
        #run: echo ${{ github.event.client_payload.param1 }}

      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
        #run: |
          #echo Add other actions to build,
          #echo test, and deploy your project.
      
      #- name: set param
        #run: echo ${{ github.event.client_payload.param1 }}
        #run: echo envKey

      - name: testing
        run: echo 'Run here: $ENVIRONMENT'
        #npm install
      
      #- name: run test
        #env:
          #envKey = ${{ github.event.client_payload.param1 }}
        #run: | 
          #echo "envKey=$(echo ${{ github.event.client_payload.param1 }}" >> $GITHUB_ENV
          #npm test
          #ÃŸecho '${{ env.ENVIRONMENT}}'
